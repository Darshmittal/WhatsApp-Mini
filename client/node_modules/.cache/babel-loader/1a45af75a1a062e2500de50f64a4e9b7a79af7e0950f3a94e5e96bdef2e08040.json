{"ast":null,"code":"var _jsxFileName = \"D:\\\\whatsapp\\\\client\\\\src\\\\components\\\\chat\\\\chat\\\\Messages.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { Box, styled } from '@mui/material';\nimport { io } from 'socket.io-client';\nimport { getMessages, newMessage } from '../../../service/api';\nimport { AccountContext } from '../../../context/accountprovider';\n\n//components\nimport Message from './Message';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Box)`\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\n    background-size: 50%;\n`;\n_c = Wrapper;\nconst StyledFooter = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    // position: absolute;\n    width: 100%;\n    // bottom: 0\n`;\nconst Component = styled(Box)`\n    height: 80vh;\n    overflow-y: scroll;\n`;\n_c2 = Component;\nconst Container = styled(Box)`\n    padding: 1px 80px;\n`;\n_c3 = Container;\nconst Messages = _ref => {\n  _s();\n  var _conversation$members2;\n  let {\n    person,\n    conversation\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [incomingMessage, setIncomingMessage] = useState(null);\n  const [value, setValue] = useState();\n  const [file, setFile] = useState();\n  const [image, setImage] = useState();\n  const scrollRef = useRef();\n  const {\n    account,\n    socket,\n    newMessageFlag,\n    setNewMessageFlag\n  } = useContext(AccountContext);\n  useEffect(() => {\n    socket.current.on('getMessage', data => {\n      setIncomingMessage({\n        ...data,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const getMessageDetails = async () => {\n      let data = await getMessages(conversation._id);\n      setMessages(data);\n    };\n    conversation._id && getMessageDetails();\n  }, [conversation._id, person._id, newMessageFlag]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      transition: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    var _conversation$members;\n    incomingMessage && (conversation === null || conversation === void 0 ? void 0 : (_conversation$members = conversation.members) === null || _conversation$members === void 0 ? void 0 : _conversation$members.includes(incomingMessage.senderId)) && setMessages(prev => [...prev, incomingMessage]);\n  }, [incomingMessage, conversation]);\n  const receiverId = conversation === null || conversation === void 0 ? void 0 : (_conversation$members2 = conversation.members) === null || _conversation$members2 === void 0 ? void 0 : _conversation$members2.find(member => member !== account.sub);\n  const sendText = async e => {\n    console.log(e);\n    let code = e.keyCode || e.which;\n    if (!value) return;\n    if (code === 13) {\n      let message = {};\n      if (!file) {\n        message = {\n          senderId: account.sub,\n          receiverId: person.sub,\n          conversationId: conversation._id,\n          type: 'text',\n          text: value\n        };\n      } else {\n        message = {\n          senderId: account.sub,\n          conversationId: conversation._id,\n          receiverId: receiverId,\n          type: 'file',\n          text: image\n        };\n      }\n      socket.current.emit('sendMessage', message);\n      await newMessage(message);\n      setValue('');\n      setFile();\n      setImage('');\n      setNewMessageFlag(prev => !prev);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Component, {\n      children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      sendText: sendText,\n      value: value,\n      setValue: setValue,\n      setFile: setFile,\n      file: file,\n      setImage: setImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(Messages, \"yPurqa4xIP4LrdyOLvDDe7hznkg=\");\n_c4 = Messages;\nexport default Messages;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Messages\");","map":{"version":3,"names":["useState","useEffect","useContext","useRef","Box","styled","io","getMessages","newMessage","AccountContext","Message","Footer","jsxDEV","_jsxDEV","Wrapper","_c","StyledFooter","Component","_c2","Container","_c3","Messages","_ref","_s","_conversation$members2","person","conversation","messages","setMessages","incomingMessage","setIncomingMessage","value","setValue","file","setFile","image","setImage","scrollRef","account","socket","newMessageFlag","setNewMessageFlag","current","on","data","createdAt","Date","now","getMessageDetails","_id","_scrollRef$current","scrollIntoView","transition","_conversation$members","members","includes","senderId","prev","receiverId","find","member","sub","sendText","e","console","log","code","keyCode","which","message","conversationId","type","text","emit","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["D:/whatsapp/client/src/components/chat/chat/Messages.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, styled } from '@mui/material';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nimport { getMessages, newMessage } from '../../../service/api';\r\nimport { AccountContext } from '../../../context/accountprovider';\r\n\r\n//components\r\nimport Message from './Message';\r\nimport Footer from './Footer';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\r\n    background-size: 50%;\r\n`;\r\n\r\nconst StyledFooter = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    // position: absolute;\r\n    width: 100%;\r\n    // bottom: 0\r\n`;\r\n    \r\nconst Component = styled(Box)`\r\n    height: 80vh;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 1px 80px;\r\n`;\r\n\r\n\r\n\r\nconst Messages = ({ person, conversation }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n    const [value, setValue] = useState();\r\n    const [file, setFile] = useState();\r\n    const [image, setImage] = useState();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        socket.current.on('getMessage', data => {\r\n            setIncomingMessage({\r\n                ...data,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const getMessageDetails = async () => {\r\n            let data = await getMessages(conversation._id);\r\n            setMessages(data);\r\n        }\r\n        conversation._id && getMessageDetails();\r\n    }, [conversation._id, person._id, newMessageFlag]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \r\n            setMessages((prev) => [...prev, incomingMessage]);\r\n        \r\n    }, [incomingMessage, conversation]);\r\n\r\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\r\n    \r\n    const sendText = async (e) => {\r\n        console.log(e);\r\n        let code = e.keyCode || e.which;\r\n        if(!value) return;\r\n\r\n        if(code === 13) { \r\n            let message = {};\r\n            if (!file) {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    receiverId: person.sub,\r\n                    conversationId: conversation._id,\r\n                    type: 'text',\r\n                    text: value\r\n                };\r\n            } else {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    conversationId: conversation._id,\r\n                    receiverId: receiverId,\r\n                    type: 'file',\r\n                    text: image\r\n                };\r\n            }\r\n\r\n            socket.current.emit('sendMessage', message);\r\n\r\n            await newMessage(message);\r\n\r\n            setValue('');\r\n            setFile();\r\n            setImage('');\r\n            setNewMessageFlag(prev => !prev);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Component>\r\n            \r\n                {\r\n                \r\n                    messages && messages.map(message => (\r\n                        <Container  >\r\n                            <Message message={message} />\r\n                        </Container>\r\n                    ))\r\n                }\r\n\r\n            </Component>\r\n            <Footer \r\n                sendText={sendText} \r\n                value={value} \r\n                setValue={setValue} \r\n                setFile={setFile} \r\n                file={file} \r\n                setImage={setImage}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}