{"ast":null,"code":"var _jsxFileName = \"D:\\\\whatsapp\\\\client\\\\src\\\\components\\\\chat\\\\menu\\\\Conversation.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport { styled, Box, Typography } from \"@mui/material\";\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/';\nimport { setConversation, getConversation } from '../../../service/api';\nimport { emptyProfilePicture } from '../../../constants/data';\nimport { formatDate } from '../../../utils/common-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Component = styled(Box)`\n    height: 45px;\n    display: flex;\n    padding: 13px 0;\n    cursor: pointer;\n`;\n_c = Component;\nconst Image = styled('img')({\n  width: 50,\n  height: 50,\n  objectFit: 'cover',\n  borderRadius: '50%',\n  padding: '0 14px'\n});\n_c2 = Image;\nconst Container = styled(Box)`\n    display: flex;\n`;\n_c3 = Container;\nconst Timestamp = styled(Typography)`\n    font-size: 12px;\n    margin-left: auto;\n    color: #00000099;\n    margin-right: 20px;\n`;\n_c4 = Timestamp;\nconst Text = styled(Typography)`\n    display: block;\n    color: rgba(0, 0, 0, 0.6);\n    font-size: 14px;\n`;\n_c5 = Text;\nconst Conversation = _ref => {\n  _s();\n  var _message$text;\n  let {\n    user\n  } = _ref;\n  const url = user.picture || emptyProfilePicture;\n  const {\n    setPerson\n  } = useContext(UserContext);\n  const {\n    account,\n    newMessageFlag\n  } = useContext(AccountContext);\n  const [message, setMessage] = useState({});\n  useEffect(() => {\n    const getConversationMessage = async () => {\n      const data = await getConversation({\n        senderId: account.sub,\n        receiverId: user.sub\n      });\n      setMessage({\n        text: data === null || data === void 0 ? void 0 : data.message,\n        timestamp: data === null || data === void 0 ? void 0 : data.updatedAt\n      });\n    };\n    getConversationMessage();\n  }, [newMessageFlag]);\n  const getUser = async () => {\n    setPerson(user);\n    await setConversation({\n      senderId: account.sub,\n      receiverId: user.sub\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Component, {\n    onClick: () => getUser(),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: url,\n        alt: \"display picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), (message === null || message === void 0 ? void 0 : message.text) && /*#__PURE__*/_jsxDEV(Timestamp, {\n          children: formatDate(message === null || message === void 0 ? void 0 : message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: message !== null && message !== void 0 && (_message$text = message.text) !== null && _message$text !== void 0 && _message$text.includes('localhost') ? 'media' : message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Conversation, \"ZzVqI5P7m0GoUT3fQ9FkhIEpBkQ=\");\n_c6 = Conversation;\nexport default Conversation;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Timestamp\");\n$RefreshReg$(_c5, \"Text\");\n$RefreshReg$(_c6, \"Conversation\");","map":{"version":3,"names":["useContext","useEffect","useState","styled","Box","Typography","UserContext","AccountContext","setConversation","getConversation","emptyProfilePicture","formatDate","jsxDEV","_jsxDEV","Component","_c","Image","width","height","objectFit","borderRadius","padding","_c2","Container","_c3","Timestamp","_c4","Text","_c5","Conversation","_ref","_s","_message$text","user","url","picture","setPerson","account","newMessageFlag","message","setMessage","getConversationMessage","data","senderId","sub","receiverId","text","timestamp","updatedAt","getUser","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","name","includes","_c6","$RefreshReg$"],"sources":["D:/whatsapp/client/src/components/chat/menu/Conversation.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\n\r\nimport { styled, Box, Typography } from \"@mui/material\";\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/';\r\n\r\nimport { setConversation, getConversation } from '../../../service/api';\r\nimport { emptyProfilePicture } from '../../../constants/data';\r\nimport { formatDate } from '../../../utils/common-utils';\r\n\r\nconst Component = styled(Box)`\r\n    height: 45px;\r\n    display: flex;\r\n    padding: 13px 0;\r\n    cursor: pointer;\r\n`;\r\n    \r\nconst Image = styled('img') ({\r\n    width: 50,\r\n    height: 50,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%',\r\n    padding: '0 14px'\r\n});\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n`;\r\n\r\nconst Timestamp = styled(Typography)`\r\n    font-size: 12px;\r\n    margin-left: auto;\r\n    color: #00000099;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    display: block;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n`;\r\n\r\nconst Conversation = ({ user }) => {\r\n    const url = user.picture || emptyProfilePicture;\r\n    \r\n    const { setPerson } = useContext(UserContext);\r\n    const { account, newMessageFlag }  = useContext(AccountContext);\r\n\r\n    const [message, setMessage] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getConversationMessage = async() => {\r\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\r\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\r\n        }\r\n        getConversationMessage();\r\n    }, [newMessageFlag]);\r\n\r\n    const getUser = async () => {\r\n        setPerson(user);\r\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\r\n    }\r\n\r\n    return (\r\n        <Component onClick={() => getUser()}>\r\n            <Box>\r\n                <Image src={url} alt=\"display picture\" />\r\n            </Box>\r\n            <Box style={{width: '100%'}}>\r\n                <Container>\r\n                    <Typography>{user.name}</Typography>\r\n                    { \r\n                        message?.text && \r\n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \r\n                    }\r\n                </Container>\r\n                <Box>\r\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\r\n                </Box>\r\n            </Box>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}